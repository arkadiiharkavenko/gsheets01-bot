import aiogram
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message

import bot_app.main
from bot_app import config
from bot_app.handlers.admin.admin_echo import admin_echo_button
from bot_app.handlers.profit.handler import AddNewProfit
from bot_app.keyboard.inline_markup import expenses_button
# from bot_app.keyboard.reply_echo_admin_button import admin_cancel_button
from bot_app.keyboard.reply_cancel_button import back_cancel_btn, cancel_btn
from bot_app.misc import dp, bot


class AddNewExpense(StatesGroup):
    add_new_row = State()


@dp.message_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID), text='üîö    –í–∏–π—Ç–∏',
                    state=AddNewExpense.add_new_row)
async def cancel_expense(message: Message, state: FSMContext):
    await bot.delete_message(message.from_user.id, message.message_id)
    await bot.delete_message(message.from_user.id, message.message_id - 1)
    await state.finish()
    await bot.send_message(chat_id=message.from_user.id, text='–î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ',
                           reply_markup=admin_echo_button())


@dp.message_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID), text='‚¨ÖÔ∏è  –ù–∞–∑–∞–¥',
                    state=AddNewExpense.add_new_row)
async def back_to_choice_expense(message: Message, state: FSMContext):
    await bot.delete_message(message.from_user.id, message.message_id)
    await bot.delete_message(message.from_user.id, message.message_id-1)
    await bot.send_message(message.from_user.id, text='–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä—É',
                           reply_markup=bot_app.keyboard.reply_cancel_button.cancel_btn())
    await bot.send_message(chat_id=message.from_user.id, text='–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç:',
                           reply_markup=expenses_button())


@dp.message_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID), text='üõí')
async def choice_expense(message: Message):
    await bot.send_message(message.from_user.id, text='–í—Ö—ñ–¥ –≤ –º–µ–Ω—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç',
                           reply_markup=bot_app.keyboard.reply_cancel_button.cancel_btn())
    await bot.send_message(chat_id=message.from_user.id, text='–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç:',
                           reply_markup=expenses_button())
    await AddNewExpense.add_new_row.set()


@dp.callback_query_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID),
                           text_startswith='category-', state=AddNewExpense.add_new_row)
async def settings_menu(call: CallbackQuery, state: FSMContext):
    """
    –î–æ—Å—Ç–∞–µ–º –∏–º–µ–Ω–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –ø–æ—Ç–æ–º —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–∞–∫–æ–µ –±—É–¥–µ—à—å –¥–æ—Å—Ç–∞–≤–∞—Ç—å, –Ω–æ –ø–æ–∫–∞ —Ç–∞–∫,
    —á—Ç–æ –±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–µ —Å–∏–ª—å–Ω–æ –º–µ–Ω—è –∫–æ–¥, —Ç–∞–∫ –∂–µ –∫–æ–ª–ª –±–µ–∫ –µ—Å–ª–∏ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–π - –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞—Ä—Ç–≤–∏–∑
    """
    await call.answer()

    await state.set_data({'state': call.data})
    text_for_user = config.category_names.get(call.data.split('-')[1])
    await call.message.delete()
    await bot.send_message(call.from_user.id, text=f'–û–±—Ä–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é   <b>"{text_for_user}" </b>\n\n'
                                                   f'–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –≤–∏—Ç—Ä–∞—Ç (–±–µ–∑ –∫–æ–ø—ñ–π–æ–∫):',
                           reply_markup=bot_app.keyboard.reply_cancel_button.back_cancel_btn())


@dp.message_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID),
                    regexp='^[0-9][0-9][0-9][0-9][0-9]$|^[0-9][0-9][0-9][0-9]$|^[0-9][0-9][0-9]$|^[0-9][0-9]$|^[1-9]$',
                    state=AddNewExpense.add_new_row
                    )
async def add_new_prod(message: Message, state: FSMContext):
    summa = message.text
    user_name = message.from_user.first_name
    date_mes = message.date
    state_status = await state.get_data()
    categories = state_status['state'].split('-')[1]
    range_ = await bot_app.main.set_current_range_expenses(date_mes)

    if categories == 'products':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       summa]
    elif categories == 'services':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, summa]
    elif categories == 'relax':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, summa]
    elif categories == 'cleaning':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, None, summa]
    elif categories == 'car':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, None, None, summa]
    elif categories == 'village':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, None, None, None, summa]
    elif categories == 'credit':
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, None, None, None, None, summa]
    else:
        values_data = [user_name, date_mes.date().day, date_mes.strftime('%H;%M'), None,
                       None, None, None, None, None, None, None, summa]

    await bot_app.main.add_new_row(range_, {'values': [values_data]})

    await bot.send_message(message.from_user.id, text=f'–í–∏—Ç—Ä–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ', reply_markup=cancel_btn())
    await bot.send_message(chat_id=message.from_user.id, text='–î–ª—è –ø—Ä–æ–¥–æ–≤–¥–µ–Ω–Ω—è –≤–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç,\n\n'
                                                              '–¥–ª—è –≤–∏—Ö–æ–¥—É  -  "üîö    –í–∏–π—Ç–∏"',
                           reply_markup=expenses_button())


@dp.message_handler(aiogram.filters.IDFilter(user_id=config.ADMINS_ID), state=AddNewExpense)
async def add_new_row(message: Message, state: FSMContext):
    state_status = await state.get_data()
    try:
        categories = state_status['state'].split('-')[1]
    except KeyError:
        await bot.delete_message(message.from_user.id, message.message_id)
        await bot.send_message(message.from_user.id, text='–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É —ñ–∑ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π  üëÜ')
        return

    await bot.send_message(message.from_user.id, text=f'‚ö†  Ô∏è–ü–æ–º–∏–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è!\n–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "üîö    –í–∏–π—Ç–∏"   üëá',
                           reply_markup=bot_app.keyboard.reply_cancel_button.cancel_btn())



